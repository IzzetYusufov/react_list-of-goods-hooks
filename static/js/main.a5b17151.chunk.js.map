{"version":3,"sources":["App.tsx","Components/List.tsx","index.tsx"],"names":["SortType","List","goods","map","good","goodsFromServer","App","useState","sortBy","setSortBy","isReverse","setReverse","changedGoods","list","sort","a","b","alpa","localeCompare","length","reverse","sortingFunction","className","type","cn","onClick","prev","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,0EChBQC,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDFAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,aAAAA,E,iBAAAA,M,KA0BE,IAAMM,EAAgB,WAC3B,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA1BR,SAAyBV,EAAiBM,EAAiBE,GACzD,IAAMG,EAAI,YAAOX,GAiBjB,OAfAW,EAAKC,MAAK,SAACC,EAAGC,GACZ,OAAQR,GACN,KAAKR,EAASiB,KACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKhB,EAASmB,OACZ,OAAOJ,EAAEI,OAASH,EAAEG,OACtB,QACE,OAAO,MAITT,GACFG,EAAKO,UAGAP,EAQcQ,CACnBhB,EAAiBG,EAAoBE,GAGvC,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAWR,EAASiB,OAEpCQ,QAAS,kBAAOhB,EAAUT,EAASiB,OANrC,iCAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAWR,EAASmB,SAEpCM,QAAS,kBAAOhB,EAAUT,EAASmB,SANrC,4BAWA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAad,IAEjBe,QAAS,kBAAOd,GAAW,SAAAe,GAAI,OAAMA,MANvC,sBAUa,KAAXlB,GAAiBE,IACjB,wBACEa,KAAK,SACLD,UAAU,mBACVG,QAAS,WACPhB,EAAU,IACVE,GAAW,IALf,sBAYJ,cAAC,EAAD,CACET,MAAOU,QErGfe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a5b17151.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { List } from './Components/List';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alpa = 'alpha',\n  length = 'length',\n}\n\nfunction sortingFunction(goods: string[], sortBy:SortType, isReverse:boolean) {\n  const list = [...goods];\n\n  list.sort((a, b) => {\n    switch (sortBy) {\n      case SortType.alpa:\n        return a.localeCompare(b);\n      case SortType.length:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReverse) {\n    list.reverse();\n  }\n\n  return list;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState('');\n\n  const [isReverse, setReverse] = useState(false);\n\n  const changedGoods = sortingFunction(\n    goodsFromServer, sortBy as SortType, isReverse,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortBy !== SortType.alpa },\n          )}\n          onClick={() => (setSortBy(SortType.alpa))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortBy !== SortType.length },\n          )}\n          onClick={() => (setSortBy(SortType.length))}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={() => (setReverse(prev => (!prev)))}\n        >\n          Reverse\n        </button>\n        {(sortBy !== '' || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={() => {\n              setSortBy('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <List\n        goods={changedGoods}\n      />\n    </div>\n  );\n};\n","type Props = {\n  goods: string[];\n};\n\nexport const List: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}